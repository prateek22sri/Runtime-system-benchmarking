# Makefile.in generated by automake 1.15 from Makefile.am.
# tests/unit/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2014 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.





am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/hpx-5
pkgincludedir = $(includedir)/hpx-5
pkglibdir = $(libdir)/hpx-5
pkglibexecdir = $(libexecdir)/hpx-5
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-unknown-linux-gnu
host_triplet = x86_64-unknown-linux-gnu
target_triplet = x86_64-unknown-linux-gnu
noinst_PROGRAMS = $(am__EXEEXT_4)
TESTS = allreduce$(EXEEXT) bcast$(EXEEXT) call_when$(EXEEXT) \
	call_vectored$(EXEEXT) cxx_raii$(EXEEXT) gas_alloc$(EXEEXT) \
	gas_alloc_dist$(EXEEXT) gas_coll$(EXEEXT) \
	gas_global_alloc$(EXEEXT) gas_memget$(EXEEXT) \
	gas_memput$(EXEEXT) gas_move$(EXEEXT) \
	gas_set_affinity$(EXEEXT) init$(EXEEXT) \
	lco_get_remote$(EXEEXT) lco_allreduce$(EXEEXT) \
	lco_and$(EXEEXT) lco_array$(EXEEXT) lco_collectives$(EXEEXT) \
	lco_futures$(EXEEXT) lco_gencount$(EXEEXT) lco_reduce$(EXEEXT) \
	lco_sema$(EXEEXT) lco_setget$(EXEEXT) lco_user$(EXEEXT) \
	libhpx_boot$(EXEEXT) libhpx_cond$(EXEEXT) \
	parcel_continuation$(EXEEXT) parcel_create$(EXEEXT) \
	parcel_send$(EXEEXT) parcel_send_coalesced$(EXEEXT) \
	parcel_send_rendezvous$(EXEEXT) parcel_send_through$(EXEEXT) \
	process$(EXEEXT) runtime$(EXEEXT) thread_cont_action$(EXEEXT) \
	thread_continue$(EXEEXT) thread_create$(EXEEXT) \
	thread_gettlsid$(EXEEXT) thread_sigmask$(EXEEXT) \
	thread_yield$(EXEEXT) $(am__EXEEXT_1) $(am__EXEEXT_2) \
	$(am__EXEEXT_3)
#am__append_1 = lco_wait
#am__append_2 = apex
#am__append_3 = percolation
subdir = tests/unit
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/contrib/hwloc/config/hwloc.m4 \
	$(top_srcdir)/contrib/hwloc/config/hwloc_check_attributes.m4 \
	$(top_srcdir)/contrib/hwloc/config/hwloc_check_vendor.m4 \
	$(top_srcdir)/contrib/hwloc/config/hwloc_check_visibility.m4 \
	$(top_srcdir)/contrib/hwloc/config/hwloc_components.m4 \
	$(top_srcdir)/contrib/hwloc/config/hwloc_pkg.m4 \
	$(top_srcdir)/config/acx_configure_dir.m4 \
	$(top_srcdir)/config/ax_cfi.m4 \
	$(top_srcdir)/config/ax_compiler_vendor.m4 \
	$(top_srcdir)/config/ax_cxx_compile_stdcxx.m4 \
	$(top_srcdir)/config/ax_cxx_compile_stdcxx_11.m4 \
	$(top_srcdir)/config/ax_gcc_builtin.m4 \
	$(top_srcdir)/config/ax_pthread.m4 \
	$(top_srcdir)/config/hpx_aarch64_get_cachelinesize.m4 \
	$(top_srcdir)/config/hpx_check_cmpxchg16b.m4 \
	$(top_srcdir)/config/hpx_config_agas.m4 \
	$(top_srcdir)/config/hpx_config_apex.m4 \
	$(top_srcdir)/config/hpx_config_compiler.m4 \
	$(top_srcdir)/config/hpx_config_debug.m4 \
	$(top_srcdir)/config/hpx_config_docs.m4 \
	$(top_srcdir)/config/hpx_config_host.m4 \
	$(top_srcdir)/config/hpx_config_hpxpp.m4 \
	$(top_srcdir)/config/hpx_config_hugetlbfs.m4 \
	$(top_srcdir)/config/hpx_config_hwloc.m4 \
	$(top_srcdir)/config/hpx_config_instrumentation.m4 \
	$(top_srcdir)/config/hpx_config_jemalloc.m4 \
	$(top_srcdir)/config/hpx_config_libcuckoo.m4 \
	$(top_srcdir)/config/hpx_config_libffi.m4 \
	$(top_srcdir)/config/hpx_config_libhpx.m4 \
	$(top_srcdir)/config/hpx_config_metis.m4 \
	$(top_srcdir)/config/hpx_config_mpi.m4 \
	$(top_srcdir)/config/hpx_config_opencl.m4 \
	$(top_srcdir)/config/hpx_config_percolation.m4 \
	$(top_srcdir)/config/hpx_config_photon.m4 \
	$(top_srcdir)/config/hpx_config_pmi.m4 \
	$(top_srcdir)/config/hpx_config_tbbmalloc.m4 \
	$(top_srcdir)/config/hpx_config_tests.m4 \
	$(top_srcdir)/config/hpx_config_urcu.m4 \
	$(top_srcdir)/config/hpx_config_valgrind.m4 \
	$(top_srcdir)/config/hpx_config_version.m4 \
	$(top_srcdir)/config/hpx_do_ac_config_files.m4 \
	$(top_srcdir)/config/hpx_do_am_conditionals.m4 \
	$(top_srcdir)/config/hpx_do_config_script.m4 \
	$(top_srcdir)/config/hpx_do_summary.m4 \
	$(top_srcdir)/config/hpx_merge_shared_static.m4 \
	$(top_srcdir)/config/hpx_pe_env.m4 \
	$(top_srcdir)/config/libtool.m4 \
	$(top_srcdir)/config/ltoptions.m4 \
	$(top_srcdir)/config/ltsugar.m4 \
	$(top_srcdir)/config/ltversion.m4 \
	$(top_srcdir)/config/lt~obsolete.m4 \
	$(top_srcdir)/config/pkg.m4 $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(noinst_HEADERS) \
	$(am__DIST_COMMON)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/include/config.h \
	$(top_builddir)/include/hpx/types.h \
	$(top_builddir)/contrib/hwloc/include/private/autogen/config.h \
	$(top_builddir)/contrib/hwloc/include/hwloc/autogen/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
#am__EXEEXT_1 = lco_wait$(EXEEXT)
#am__EXEEXT_2 = apex$(EXEEXT)
#am__EXEEXT_3 = percolation$(EXEEXT)
am__EXEEXT_4 = allreduce$(EXEEXT) bcast$(EXEEXT) call_when$(EXEEXT) \
	call_vectored$(EXEEXT) cxx_raii$(EXEEXT) gas_alloc$(EXEEXT) \
	gas_alloc_dist$(EXEEXT) gas_coll$(EXEEXT) \
	gas_global_alloc$(EXEEXT) gas_memget$(EXEEXT) \
	gas_memput$(EXEEXT) gas_move$(EXEEXT) \
	gas_set_affinity$(EXEEXT) init$(EXEEXT) \
	lco_get_remote$(EXEEXT) lco_allreduce$(EXEEXT) \
	lco_and$(EXEEXT) lco_array$(EXEEXT) lco_collectives$(EXEEXT) \
	lco_futures$(EXEEXT) lco_gencount$(EXEEXT) lco_reduce$(EXEEXT) \
	lco_sema$(EXEEXT) lco_setget$(EXEEXT) lco_user$(EXEEXT) \
	libhpx_boot$(EXEEXT) libhpx_cond$(EXEEXT) \
	parcel_continuation$(EXEEXT) parcel_create$(EXEEXT) \
	parcel_send$(EXEEXT) parcel_send_coalesced$(EXEEXT) \
	parcel_send_rendezvous$(EXEEXT) parcel_send_through$(EXEEXT) \
	process$(EXEEXT) runtime$(EXEEXT) thread_cont_action$(EXEEXT) \
	thread_continue$(EXEEXT) thread_create$(EXEEXT) \
	thread_gettlsid$(EXEEXT) thread_sigmask$(EXEEXT) \
	thread_yield$(EXEEXT) $(am__EXEEXT_1) $(am__EXEEXT_2) \
	$(am__EXEEXT_3)
PROGRAMS = $(noinst_PROGRAMS)
allreduce_SOURCES = allreduce.c
allreduce_OBJECTS = allreduce.$(OBJEXT)
allreduce_LDADD = $(LDADD)
am__DEPENDENCIES_1 =
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
am__v_lt_1 = 
apex_SOURCES = apex.c
apex_OBJECTS = apex.$(OBJEXT)
apex_LDADD = $(LDADD)
bcast_SOURCES = bcast.c
bcast_OBJECTS = bcast.$(OBJEXT)
bcast_LDADD = $(LDADD)
call_vectored_SOURCES = call_vectored.c
call_vectored_OBJECTS = call_vectored.$(OBJEXT)
call_vectored_LDADD = $(LDADD)
call_when_SOURCES = call_when.c
call_when_OBJECTS = call_when.$(OBJEXT)
call_when_LDADD = $(LDADD)
am_cxx_raii_OBJECTS = cxx_raii.$(OBJEXT)
cxx_raii_OBJECTS = $(am_cxx_raii_OBJECTS)
cxx_raii_LDADD = $(LDADD)
gas_alloc_SOURCES = gas_alloc.c
gas_alloc_OBJECTS = gas_alloc.$(OBJEXT)
gas_alloc_LDADD = $(LDADD)
gas_alloc_dist_SOURCES = gas_alloc_dist.c
gas_alloc_dist_OBJECTS = gas_alloc_dist.$(OBJEXT)
gas_alloc_dist_LDADD = $(LDADD)
gas_coll_SOURCES = gas_coll.c
gas_coll_OBJECTS = gas_coll.$(OBJEXT)
gas_coll_LDADD = $(LDADD)
gas_global_alloc_SOURCES = gas_global_alloc.c
gas_global_alloc_OBJECTS = gas_global_alloc.$(OBJEXT)
gas_global_alloc_LDADD = $(LDADD)
gas_memget_SOURCES = gas_memget.c
gas_memget_OBJECTS = gas_memget.$(OBJEXT)
gas_memget_LDADD = $(LDADD)
gas_memput_SOURCES = gas_memput.c
gas_memput_OBJECTS = gas_memput.$(OBJEXT)
gas_memput_LDADD = $(LDADD)
gas_move_SOURCES = gas_move.c
gas_move_OBJECTS = gas_move.$(OBJEXT)
gas_move_LDADD = $(LDADD)
gas_set_affinity_SOURCES = gas_set_affinity.c
gas_set_affinity_OBJECTS = gas_set_affinity.$(OBJEXT)
gas_set_affinity_LDADD = $(LDADD)
init_SOURCES = init.c
init_OBJECTS = init.$(OBJEXT)
init_LDADD = $(LDADD)
lco_allreduce_SOURCES = lco_allreduce.c
lco_allreduce_OBJECTS = lco_allreduce.$(OBJEXT)
lco_allreduce_LDADD = $(LDADD)
lco_and_SOURCES = lco_and.c
lco_and_OBJECTS = lco_and.$(OBJEXT)
lco_and_LDADD = $(LDADD)
lco_array_SOURCES = lco_array.c
lco_array_OBJECTS = lco_array.$(OBJEXT)
lco_array_LDADD = $(LDADD)
lco_collectives_SOURCES = lco_collectives.c
lco_collectives_OBJECTS = lco_collectives.$(OBJEXT)
lco_collectives_LDADD = $(LDADD)
lco_futures_SOURCES = lco_futures.c
lco_futures_OBJECTS = lco_futures.$(OBJEXT)
lco_futures_LDADD = $(LDADD)
lco_gencount_SOURCES = lco_gencount.c
lco_gencount_OBJECTS = lco_gencount.$(OBJEXT)
lco_gencount_LDADD = $(LDADD)
lco_get_remote_SOURCES = lco_get_remote.c
lco_get_remote_OBJECTS = lco_get_remote.$(OBJEXT)
lco_get_remote_LDADD = $(LDADD)
lco_reduce_SOURCES = lco_reduce.c
lco_reduce_OBJECTS = lco_reduce.$(OBJEXT)
lco_reduce_LDADD = $(LDADD)
lco_sema_SOURCES = lco_sema.c
lco_sema_OBJECTS = lco_sema.$(OBJEXT)
lco_sema_LDADD = $(LDADD)
lco_setget_SOURCES = lco_setget.c
lco_setget_OBJECTS = lco_setget.$(OBJEXT)
lco_setget_LDADD = $(LDADD)
lco_user_SOURCES = lco_user.c
lco_user_OBJECTS = lco_user.$(OBJEXT)
lco_user_LDADD = $(LDADD)
lco_wait_SOURCES = lco_wait.c
lco_wait_OBJECTS = lco_wait.$(OBJEXT)
lco_wait_LDADD = $(LDADD)
am_libhpx_boot_OBJECTS = libhpx_boot-libhpx_boot.$(OBJEXT)
libhpx_boot_OBJECTS = $(am_libhpx_boot_OBJECTS)
libhpx_boot_LDADD = $(LDADD)
libhpx_cond_SOURCES = libhpx_cond.c
libhpx_cond_OBJECTS = libhpx_cond-libhpx_cond.$(OBJEXT)
libhpx_cond_LDADD = $(LDADD)
libhpx_cond_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(libhpx_cond_CFLAGS) \
	$(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
parcel_continuation_SOURCES = parcel_continuation.c
parcel_continuation_OBJECTS = parcel_continuation.$(OBJEXT)
parcel_continuation_LDADD = $(LDADD)
parcel_create_SOURCES = parcel_create.c
parcel_create_OBJECTS = parcel_create.$(OBJEXT)
parcel_create_LDADD = $(LDADD)
am_parcel_send_OBJECTS = parcel_send.$(OBJEXT)
parcel_send_OBJECTS = $(am_parcel_send_OBJECTS)
parcel_send_LDADD = $(LDADD)
parcel_send_coalesced_SOURCES = parcel_send_coalesced.c
parcel_send_coalesced_OBJECTS = parcel_send_coalesced.$(OBJEXT)
parcel_send_coalesced_LDADD = $(LDADD)
parcel_send_rendezvous_SOURCES = parcel_send_rendezvous.c
parcel_send_rendezvous_OBJECTS = parcel_send_rendezvous.$(OBJEXT)
parcel_send_rendezvous_LDADD = $(LDADD)
parcel_send_through_SOURCES = parcel_send_through.c
parcel_send_through_OBJECTS = parcel_send_through.$(OBJEXT)
parcel_send_through_LDADD = $(LDADD)
percolation_SOURCES = percolation.c
percolation_OBJECTS = percolation.$(OBJEXT)
percolation_LDADD = $(LDADD)
process_SOURCES = process.c
process_OBJECTS = process.$(OBJEXT)
process_LDADD = $(LDADD)
runtime_SOURCES = runtime.c
runtime_OBJECTS = runtime.$(OBJEXT)
runtime_LDADD = $(LDADD)
thread_cont_action_SOURCES = thread_cont_action.c
thread_cont_action_OBJECTS = thread_cont_action.$(OBJEXT)
thread_cont_action_LDADD = $(LDADD)
thread_continue_SOURCES = thread_continue.c
thread_continue_OBJECTS = thread_continue.$(OBJEXT)
thread_continue_LDADD = $(LDADD)
thread_create_SOURCES = thread_create.c
thread_create_OBJECTS = thread_create.$(OBJEXT)
thread_create_LDADD = $(LDADD)
thread_gettlsid_SOURCES = thread_gettlsid.c
thread_gettlsid_OBJECTS = thread_gettlsid.$(OBJEXT)
thread_gettlsid_LDADD = $(LDADD)
thread_sigmask_SOURCES = thread_sigmask.c
thread_sigmask_OBJECTS = thread_sigmask.$(OBJEXT)
thread_sigmask_LDADD = $(LDADD)
am_thread_yield_OBJECTS = thread_yield.$(OBJEXT)
thread_yield_OBJECTS = $(am_thread_yield_OBJECTS)
thread_yield_LDADD = $(LDADD)
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = 
depcomp = $(SHELL) $(top_srcdir)/config/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_$(V))
am__v_CXX_ = $(am__v_CXX_$(AM_DEFAULT_VERBOSITY))
am__v_CXX_0 = @echo "  CXX     " $@;
am__v_CXX_1 = 
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CXXLD = $(am__v_CXXLD_$(V))
am__v_CXXLD_ = $(am__v_CXXLD_$(AM_DEFAULT_VERBOSITY))
am__v_CXXLD_0 = @echo "  CXXLD   " $@;
am__v_CXXLD_1 = 
SOURCES = allreduce.c apex.c bcast.c call_vectored.c call_when.c \
	$(cxx_raii_SOURCES) gas_alloc.c gas_alloc_dist.c gas_coll.c \
	gas_global_alloc.c gas_memget.c gas_memput.c gas_move.c \
	gas_set_affinity.c init.c lco_allreduce.c lco_and.c \
	lco_array.c lco_collectives.c lco_futures.c lco_gencount.c \
	lco_get_remote.c lco_reduce.c lco_sema.c lco_setget.c \
	lco_user.c lco_wait.c $(libhpx_boot_SOURCES) libhpx_cond.c \
	parcel_continuation.c parcel_create.c $(parcel_send_SOURCES) \
	parcel_send_coalesced.c parcel_send_rendezvous.c \
	parcel_send_through.c percolation.c process.c runtime.c \
	thread_cont_action.c thread_continue.c thread_create.c \
	thread_gettlsid.c thread_sigmask.c $(thread_yield_SOURCES)
DIST_SOURCES = allreduce.c apex.c bcast.c call_vectored.c call_when.c \
	$(cxx_raii_SOURCES) gas_alloc.c gas_alloc_dist.c gas_coll.c \
	gas_global_alloc.c gas_memget.c gas_memput.c gas_move.c \
	gas_set_affinity.c init.c lco_allreduce.c lco_and.c \
	lco_array.c lco_collectives.c lco_futures.c lco_gencount.c \
	lco_get_remote.c lco_reduce.c lco_sema.c lco_setget.c \
	lco_user.c lco_wait.c $(libhpx_boot_SOURCES) libhpx_cond.c \
	parcel_continuation.c parcel_create.c $(parcel_send_SOURCES) \
	parcel_send_coalesced.c parcel_send_rendezvous.c \
	parcel_send_through.c percolation.c process.c runtime.c \
	thread_cont_action.c thread_continue.c thread_create.c \
	thread_gettlsid.c thread_sigmask.c $(thread_yield_SOURCES)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
HEADERS = $(noinst_HEADERS)
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
am__tty_colors_dummy = \
  mgn= red= grn= lgn= blu= brg= std=; \
  am__color_tests=no
am__tty_colors = { \
  $(am__tty_colors_dummy); \
  if test "X$(AM_COLOR_TESTS)" = Xno; then \
    am__color_tests=no; \
  elif test "X$(AM_COLOR_TESTS)" = Xalways; then \
    am__color_tests=yes; \
  elif test "X$$TERM" != Xdumb && { test -t 1; } 2>/dev/null; then \
    am__color_tests=yes; \
  fi; \
  if test $$am__color_tests = yes; then \
    red='[0;31m'; \
    grn='[0;32m'; \
    lgn='[1;32m'; \
    blu='[1;34m'; \
    mgn='[0;35m'; \
    brg='[1m'; \
    std='[m'; \
  fi; \
}
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__recheck_rx = ^[ 	]*:recheck:[ 	]*
am__global_test_result_rx = ^[ 	]*:global-test-result:[ 	]*
am__copy_in_global_log_rx = ^[ 	]*:copy-in-global-log:[ 	]*
# A command that, given a newline-separated list of test names on the
# standard input, print the name of the tests that are to be re-run
# upon "make recheck".
am__list_recheck_tests = $(AWK) '{ \
  recheck = 1; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
        { \
          if ((getline line2 < ($$0 ".log")) < 0) \
	    recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[nN][Oo]/) \
        { \
          recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[yY][eE][sS]/) \
        { \
          break; \
        } \
    }; \
  if (recheck) \
    print $$0; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# A command that, given a newline-separated list of test names on the
# standard input, create the global log from their .trs and .log files.
am__create_global_log = $(AWK) ' \
function fatal(msg) \
{ \
  print "fatal: making $@: " msg | "cat >&2"; \
  exit 1; \
} \
function rst_section(header) \
{ \
  print header; \
  len = length(header); \
  for (i = 1; i <= len; i = i + 1) \
    printf "="; \
  printf "\n\n"; \
} \
{ \
  copy_in_global_log = 1; \
  global_test_result = "RUN"; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
         fatal("failed to read from " $$0 ".trs"); \
      if (line ~ /$(am__global_test_result_rx)/) \
        { \
          sub("$(am__global_test_result_rx)", "", line); \
          sub("[ 	]*$$", "", line); \
          global_test_result = line; \
        } \
      else if (line ~ /$(am__copy_in_global_log_rx)[nN][oO]/) \
        copy_in_global_log = 0; \
    }; \
  if (copy_in_global_log) \
    { \
      rst_section(global_test_result ": " $$0); \
      while ((rc = (getline line < ($$0 ".log"))) != 0) \
      { \
        if (rc < 0) \
          fatal("failed to read from " $$0 ".log"); \
        print line; \
      }; \
      printf "\n"; \
    }; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# Restructured Text title.
am__rst_title = { sed 's/.*/   &   /;h;s/./=/g;p;x;s/ *$$//;p;g' && echo; }
# Solaris 10 'make', and several other traditional 'make' implementations,
# pass "-e" to $(SHELL), and POSIX 2008 even requires this.  Work around it
# by disabling -e (using the XSI extension "set +e") if it's set.
am__sh_e_setup = case $$- in *e*) set +e;; esac
# Default flags passed to test drivers.
am__common_driver_flags = \
  --color-tests "$$am__color_tests" \
  --enable-hard-errors "$$am__enable_hard_errors" \
  --expect-failure "$$am__expect_failure"
# To be inserted before the command running the test.  Creates the
# directory for the log if needed.  Stores in $dir the directory
# containing $f, in $tst the test, in $log the log.  Executes the
# developer- defined test setup AM_TESTS_ENVIRONMENT (if any), and
# passes TESTS_ENVIRONMENT.  Set up options for the wrapper that
# will run the test scripts (or their associated LOG_COMPILER, if
# thy have one).
am__check_pre = \
$(am__sh_e_setup);					\
$(am__vpath_adj_setup) $(am__vpath_adj)			\
$(am__tty_colors);					\
srcdir=$(srcdir); export srcdir;			\
case "$@" in						\
  */*) am__odir=`echo "./$@" | sed 's|/[^/]*$$||'`;;	\
    *) am__odir=.;; 					\
esac;							\
test "x$$am__odir" = x"." || test -d "$$am__odir" 	\
  || $(MKDIR_P) "$$am__odir" || exit $$?;		\
if test -f "./$$f"; then dir=./;			\
elif test -f "$$f"; then dir=;				\
else dir="$(srcdir)/"; fi;				\
tst=$$dir$$f; log='$@'; 				\
if test -n '$(DISABLE_HARD_ERRORS)'; then		\
  am__enable_hard_errors=no; 				\
else							\
  am__enable_hard_errors=yes; 				\
fi; 							\
case " $(XFAIL_TESTS) " in				\
  *[\ \	]$$f[\ \	]* | *[\ \	]$$dir$$f[\ \	]*) \
    am__expect_failure=yes;;				\
  *)							\
    am__expect_failure=no;;				\
esac; 							\
$(AM_TESTS_ENVIRONMENT) $(TESTS_ENVIRONMENT)
# A shell command to get the names of the tests scripts with any registered
# extension removed (i.e., equivalently, the names of the test logs, with
# the '.log' extension removed).  The result is saved in the shell variable
# '$bases'.  This honors runtime overriding of TESTS and TEST_LOGS.  Sadly,
# we cannot use something simpler, involving e.g., "$(TEST_LOGS:.log=)",
# since that might cause problem with VPATH rewrites for suffix-less tests.
# See also 'test-harness-vpath-rewrite.sh' and 'test-trs-basic.sh'.
am__set_TESTS_bases = \
  bases='$(TEST_LOGS)'; \
  bases=`for i in $$bases; do echo $$i; done | sed 's/\.log$$//'`; \
  bases=`echo $$bases`
RECHECK_LOGS = $(TEST_LOGS)
AM_RECURSIVE_TARGETS = check recheck
TEST_SUITE_LOG = test-suite.log
LOG_DRIVER = $(SHELL) $(top_srcdir)/config/test-driver
LOG_COMPILE = $(LOG_COMPILER) $(AM_LOG_FLAGS) $(LOG_FLAGS)
am__set_b = \
  case '$@' in \
    */*) \
      case '$*' in \
        */*) b='$*';; \
          *) b=`echo '$@' | sed 's/\.log$$//'`; \
       esac;; \
    *) \
      b='$*';; \
  esac
am__test_logs1 = $(TESTS:=.log)
am__test_logs2 = $(am__test_logs1:.log=.log)
am__test_logs3 = $(am__test_logs2:.cpp.log=.log)
CPP_LOG_DRIVER = $(SHELL) $(top_srcdir)/config/test-driver
CPP_LOG_COMPILE = $(CPP_LOG_COMPILER) $(AM_CPP_LOG_FLAGS) \
	$(CPP_LOG_FLAGS)
TEST_LOGS = $(am__test_logs3:.c.log=.log)
C_LOG_DRIVER = $(SHELL) $(top_srcdir)/config/test-driver
C_LOG_COMPILE = $(C_LOG_COMPILER) $(AM_C_LOG_FLAGS) $(C_LOG_FLAGS)
am__DIST_COMMON = $(srcdir)/Makefile.in $(top_srcdir)/config/depcomp \
	$(top_srcdir)/config/test-driver
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /N/u/pratsriv/BigRed2/hpx-4.1.0/hpx/config/missing aclocal-1.15
AMTAR = $${TAR-tar}
AM_DEFAULT_VERBOSITY = 0
APEX_CFLAGS = 
APEX_LIBS = 
AR = ar
AUTOCONF = ${SHELL} /N/u/pratsriv/BigRed2/hpx-4.1.0/hpx/config/missing autoconf
AUTOHEADER = ${SHELL} /N/u/pratsriv/BigRed2/hpx-4.1.0/hpx/config/missing autoheader
AUTOMAKE = ${SHELL} /N/u/pratsriv/BigRed2/hpx-4.1.0/hpx/config/missing automake-1.15
AWK = gawk
BASH = /bin/sh
BINDIR = /N/u/pratsriv/BigRed2/hpx-4.1.0/hpx-install/bin
CC = cc
CCAS = cc
CCASDEPMODE = depmode=gcc3
CCASFLAGS = -O3 -g
CCDEPMODE = depmode=gcc3
CFLAGS = -O3 -g
CLEANFILES = *~ .\#*
CONFIG = --prefix=/N/u/pratsriv/BigRed2/hpx-4.1.0/hpx-install/ CC=cc CXX=CC --enable-mpi PKG_CONFIG_PATH=/opt/cray/rca/1.0.0-2.0502.60530.1.63.gem/lib64/pkgconfig:/opt/cray/alps/5.2.4-2.0502.9774.31.12.gem/lib64/pkgconfig:/opt/cray/xpmem/0.1-2.0502.64982.5.3.gem/lib64/pkgconfig:/opt/cray/gni-headers/4.0-1.0502.10859.7.8.gem/lib64/pkgconfig:/opt/cray/dmapp/7.0.1-1.0502.11080.8.74.gem/lib64/pkgconfig:/opt/cray/pmi/5.0.10-1.0000.11050.179.3.gem/lib64/pkgconfig:/opt/cray/ugni/6.0-1.0502.10863.8.28.gem/lib64/pkgconfig:/opt/cray/udreg/2.3.2-1.0502.10518.2.17.gem/lib64/pkgconfig:/opt/cray/craype/2.5.3/pkg-config:/opt/cray/iobuf/2.0.6/lib/pkgconfig:/opt/cray/atp/2.0.0/lib/pkgconfig
CPP = cc -E
CPPFLAGS = 
CXX = CC
CXXCPP = CC -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -O3 -g -std=gnu++11
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DLLTOOL = false
DOXYGEN = 
DSYMUTIL = 
DUMPBIN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /usr/bin/grep -E
EXEEXT = 
FGREP = /usr/bin/grep -F
GREP = /usr/bin/grep
HAVE_CXX11 = 
HPX_APPS_CFLAGS =   -fvisibility=hidden 
HPX_APPS_CPPFLAGS = -I$(srcdir) -I$(top_builddir)/include -I$(HWLOC_top_builddir)/include -I$(HWLOC_top_srcdir)/include
HPX_APPS_CXXFLAGS = 
HPX_APPS_DEPS =  $(top_builddir)/libhpx/libhpx.la
HPX_APPS_LDADD = $(top_builddir)/libhpx/libhpx.la  -lrt -ljemalloc -lm   -lpciaccess  -lffi -lm -lstdc++
HPX_APPS_LDFLAGS = -Wl,-rpath,$(abs_top_builddir)/contrib/jemalloc/lib -static-libtool-libs
HPX_CACHELINE_SIZE = 64
HPX_COPYRIGHT = Copyright (c) 2013-2017, Trustees of Indiana University.
HPX_PC_CFLAGS =  -D_POSIX_C_SOURCE=200809L
HPX_PC_PRIVATE_LIBS = -Wl,-rpath,${libdir}    -lm   -lpciaccess  -lm -lcityhash
HPX_PC_PRIVATE_PKGS = 
HPX_PC_PUBLIC_LIBS =  -lrt -lffi -lstdc++ -Wl,-rpath,${libdir}    -lm   -lpciaccess  -lm -lcityhash
HPX_PC_REQUIRES_PKGS =  liburcu-qsbr liburcu-cds jemalloc 
HPX_VERSION = 
HUGETLBFS_CFLAGS = 
HUGETLBFS_LIBS = 
HWLOC_CFLAGS =  -fvisibility=hidden 
HWLOC_CPPFLAGS = -I$(HWLOC_top_builddir)/include -I$(HWLOC_top_srcdir)/include -I$(srcdir) -I$(builddir)
HWLOC_CUDA_LIBS = 
HWLOC_EMBEDDED_CFLAGS =  -fvisibility=hidden 
HWLOC_EMBEDDED_CPPFLAGS = -I$(HWLOC_top_builddir)/include -I$(HWLOC_top_srcdir)/include
HWLOC_EMBEDDED_LDADD = $(HWLOC_top_builddir)/src/libhwloc_embedded.la
HWLOC_EMBEDDED_LIBS = -lm   -lpciaccess 
HWLOC_GL_LIBS = 
HWLOC_HAVE_LIBXML2 = 0
HWLOC_HAVE_NVML = 0
HWLOC_HAVE_OPENCL = 0
HWLOC_KERRIGHED_CFLAGS = 
HWLOC_KERRIGHED_LIBS = 
HWLOC_LDFLAGS = 
HWLOC_LIBS = 
HWLOC_LIBS_PRIVATE =  -lpthread
HWLOC_LIBXML2_CFLAGS = 
HWLOC_LIBXML2_LIBS = 
HWLOC_LINUX_LIBNUMA_LIBS = 
HWLOC_MS_LIB = 
HWLOC_MS_LIB_ARCH = X64
HWLOC_NVML_LIBS = 
HWLOC_OPENCL_LIBS = 
HWLOC_PCIACCESS_CFLAGS = 
HWLOC_PCIACCESS_LIBS = -lpciaccess 
HWLOC_PLUGINS_DIR = $(libdir)/hwloc
HWLOC_PLUGINS_PATH = $(libdir)/hwloc
HWLOC_RELEASE_DATE = Aug 28, 2016
HWLOC_REQUIRES = pciaccess 
HWLOC_VERSION = 1.11.4
HWLOC_X11_CPPFLAGS = 
HWLOC_X11_LIBS =  -lSM -lICE  -lX11 
HWLOC_top_builddir = /N/u/pratsriv/BigRed2/hpx-4.1.0/hpx/contrib/hwloc
HWLOC_top_srcdir = /N/u/pratsriv/BigRed2/hpx-4.1.0/hpx/contrib/hwloc
INCLUDEDIR = /N/u/pratsriv/BigRed2/hpx-4.1.0/hpx-install/include
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
JEMALLOC_CARGS = 
JEMALLOC_CFLAGS = 
JEMALLOC_LIBS = 
LD = /usr/bin/ld -m elf_x86_64
LDFLAGS = 
LIBDIR = /N/u/pratsriv/BigRed2/hpx-4.1.0/hpx-install/lib
LIBFFI_CFLAGS = 
LIBFFI_CONTRIB_DIR = libffi
LIBFFI_LIBS = 
LIBHPX_CCASFLAGS = 
LIBHPX_CFLAGS =    -fvisibility=hidden 
LIBHPX_CPPFLAGS = -I$(srcdir) -I$(top_builddir)/include -I$(top_srcdir)/contrib/userspace-rcu/ -I$(top_builddir)/contrib/userspace-rcu/ -I$(top_builddir)/contrib/jemalloc/include -I$(HWLOC_top_builddir)/include -I$(HWLOC_top_srcdir)/include -I$(top_srcdir)/contrib/valgrind/include -I$(top_srcdir)/contrib/libcuckoo/libcuckoo/ -I$(top_srcdir)/contrib/libcuckoo/examples/cityhash/src -I$(top_srcdir)/contrib/lz4/
LIBHPX_CXXFLAGS = -D__STDC_LIMIT_MACROS -D__STDC_CONSTANT_MACROS  -fno-rtti
LIBHPX_LDFLAGS = -Wl,-rpath,$(abs_top_builddir)/contrib/jemalloc/lib -L$(abs_top_builddir)/contrib/jemalloc/lib 
LIBHPX_LIBADD =  $(top_builddir)/contrib/userspace-rcu/liburcu-qsbr.la $(top_builddir)/contrib/userspace-rcu/liburcu-cds.la $(HWLOC_top_builddir)/src/libhwloc_embedded.la $(top_builddir)/contrib/libcuckoo/src/libcityhash.la $(top_builddir)/contrib/lz4/liblz4.la
LIBOBJS = 
LIBS = -lm 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIPO = 
LN_S = ln -s
LTLIBOBJS = 
LT_SYS_LIBRARY_PATH = 
MAKEINFO = ${SHELL} /N/u/pratsriv/BigRed2/hpx-4.1.0/hpx/config/missing makeinfo
MANIFEST_TOOL = :
METIS_CFLAGS = 
METIS_LIBS = 
MKDIR_P = /bin/mkdir -p
MPI_CFLAGS = 
MPI_LIBS = 
NM = /usr/bin/nm -B
NMEDIT = 
OBJDUMP = objdump
OBJEXT = o
OTOOL = 
OTOOL64 = 
OpenCL_CFLAGS = 
OpenCL_LIBS = 
PACKAGE = hpx-5
PACKAGE_BUGREPORT = hpx@indiana.edu
PACKAGE_NAME = hpx-5
PACKAGE_STRING = hpx-5 4.1.0
PACKAGE_TARNAME = hpx-5
PACKAGE_URL = 
PACKAGE_VERSION = 4.1.0
PATH_SEPARATOR = :
PE_ENV = GNU
PHOTON_CARGS = 
PHOTON_CFLAGS = 
PHOTON_LIBS = 
PKG_CONFIG = /usr/bin/pkg-config
PKG_CONFIG_LIBDIR = 
PKG_CONFIG_PATH = /opt/cray/rca/1.0.0-2.0502.60530.1.63.gem/lib64/pkgconfig:/opt/cray/alps/5.2.4-2.0502.9774.31.12.gem/lib64/pkgconfig:/opt/cray/xpmem/0.1-2.0502.64982.5.3.gem/lib64/pkgconfig:/opt/cray/gni-headers/4.0-1.0502.10859.7.8.gem/lib64/pkgconfig:/opt/cray/dmapp/7.0.1-1.0502.11080.8.74.gem/lib64/pkgconfig:/opt/cray/pmi/5.0.10-1.0000.11050.179.3.gem/lib64/pkgconfig:/opt/cray/ugni/6.0-1.0502.10863.8.28.gem/lib64/pkgconfig:/opt/cray/udreg/2.3.2-1.0502.10518.2.17.gem/lib64/pkgconfig:/opt/cray/craype/2.5.3/pkg-config:/opt/cray/iobuf/2.0.6/lib/pkgconfig:/opt/cray/atp/2.0.0/lib/pkgconfig
PMI_CFLAGS = 
PMI_LIBS = 
PREFIX = /N/u/pratsriv/BigRed2/hpx-4.1.0/hpx-install
PTHREAD_CC = cc
PTHREAD_CFLAGS = 
PTHREAD_LIBS = 
RANLIB = ranlib
SED = /usr/bin/sed
SET_MAKE = 
SHELL = /bin/sh
STRIP = strip
TBBROOT = 
TESTS_CMD = mpirun -np 2 timeout 30s
URCU_CFLAGS = 
URCU_LIBS = 
VERSION = 4.1.0
XMKMF = 
X_CFLAGS = 
X_EXTRA_LIBS = 
X_LIBS = 
X_PRE_LIBS =  -lSM -lICE
abs_builddir = /N/u/pratsriv/BigRed2/hpx-4.1.0/hpx/tests/unit
abs_objroot = /N/u/pratsriv/BigRed2/hpx-4.1.0/hpx/
abs_srcdir = /N/u/pratsriv/BigRed2/hpx-4.1.0/hpx/tests/unit
abs_srcroot = /N/u/pratsriv/BigRed2/hpx-4.1.0/hpx/
abs_top_builddir = /N/u/pratsriv/BigRed2/hpx-4.1.0/hpx
abs_top_srcdir = /N/u/pratsriv/BigRed2/hpx-4.1.0/hpx
ac_ct_AR = ar
ac_ct_CC = cc
ac_ct_CXX = 
ac_ct_DUMPBIN = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = tar --format=ustar -chf - "$$tardir"
am__untar = tar -xf -
ax_pthread_config = 
bindir = ${exec_prefix}/bin
build = x86_64-unknown-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = unknown
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = /N/u/pratsriv/BigRed2/hpx-4.1.0/hpx-install
host = x86_64-unknown-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = unknown
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /N/u/pratsriv/BigRed2/hpx-4.1.0/hpx/config/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = $(MKDIR_P)
objroot = 
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /N/u/pratsriv/BigRed2/hpx-4.1.0/hpx-install
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
srcroot = 
sysconfdir = ${prefix}/etc
target = x86_64-unknown-linux-gnu
target_alias = 
target_cpu = x86_64
target_os = linux-gnu
target_vendor = unknown
top_build_prefix = ../../
top_builddir = ../..
top_srcdir = ../..
noinst_HEADERS = tests.h
AM_CPPFLAGS = $(HPX_APPS_CPPFLAGS) $(APEX_CFLAGS) -I$(top_srcdir)/include -Wno-unused
AM_CFLAGS = $(HPX_APPS_CFLAGS) $(APEX_CFLAGS)
AM_CXXFLAGS = $(HPX_APPS_CXXFLAGS)
AM_LDFLAGS = $(HPX_APPS_LDFLAGS) -no-install
LDADD = $(HPX_APPS_LDADD)
LOG_COMPILER = $(TESTS_CMD)
TEST_EXTENSIONS = .cpp .c

# For some reason I need to explicitly set C++ source files
libhpx_boot_SOURCES = libhpx_boot.cpp
cxx_raii_SOURCES = cxx_raii.cpp
parcel_send_SOURCES = parcel_send.cpp
thread_yield_SOURCES = thread_yield.cpp

# Override libhpx tests so that they have the right paths and flags, which are
# the LIBHPX versions rather than the HPX_APPS version.
libhpx_boot_CPPFLAGS = $(LIBHPX_CPPFLAGS) -I$(top_srcdir)/include -Wno-unused
libhpx_boot_CFLAGS = $(LIBHPX_CFLAGS)
libhpx_cond_CPPFLAGS = $(LIBHPX_CPPFLAGS) -I$(top_srcdir)/include -Wno-unused
libhpx_cond_CFLAGS = $(LIBHPX_CFLAGS)
apex_DEPENDENCIES = $(HPX_APPS_DEPS)
allreduce_DEPENDENCIES = $(HPX_APPS_DEPS)
bcast_DEPENDENCIES = $(HPX_APPS_DEPS)
call_when_DEPENDENCIES = $(HPX_APPS_DEPS)
call_vectored_DEPENDENCIES = $(HPX_APPS_DEPS)
cxx_raii_DEPENDENCIES = $(HPX_APPS_DEPS)
gas_alloc_DEPENDENCIES = $(HPX_APPS_DEPS)
gas_alloc_dist_DEPENDENCIES = $(HPX_APPS_DEPS)
gas_coll_DEPENDENCIES = $(HPX_APPS_DEPS)
gas_global_alloc_DEPENDENCIES = $(HPX_APPS_DEPS)
gas_memget_DEPENDENCIES = $(HPX_APPS_DEPS)
gas_memput_DEPENDENCIES = $(HPX_APPS_DEPS)
gas_move_DEPENDENCIES = $(HPX_APPS_DEPS)
gas_set_affinity_DEPENDENCIES = $(HPX_APPS_DEPS)
init_DEPENDENCIES = $(HPX_APPS_DEPS)
lco_allreduce_DEPENDENCIES = $(HPX_APPS_DEPS)
lco_and_DEPENDENCIES = $(HPX_APPS_DEPS)
lco_array_DEPENDENCIES = $(HPX_APPS_DEPS)
lco_collectives_DEPENDENCIES = $(HPX_APPS_DEPS)
lco_futures_DEPENDENCIES = $(HPX_APPS_DEPS)
lco_gencount_DEPENDENCIES = $(HPX_APPS_DEPS)
lco_get_remote_DEPENDENCIES = $(HPX_APPS_DEPS)
lco_reduce_DEPENDENCIES = $(HPX_APPS_DEPS)
lco_sema_DEPENDENCIES = $(HPX_APPS_DEPS)
lco_setget_DEPENDENCIES = $(HPX_APPS_DEPS)
lco_user_DEPENDENCIES = $(HPX_APPS_DEPS)
lco_wait_DEPENDENCIES = $(HPX_APPS_DEPS)
libhpx_boot_DEPENDENCIES = $(HPX_APPS_DEPS)
libhpx_cond_DEPENDENCIES = $(HPX_APPS_DEPS)
parcel_continuation_DEPENDENCIES = $(HPX_APPS_DEPS)
parcel_create_DEPENDENCIES = $(HPX_APPS_DEPS)
parcel_send_DEPENDENCIES = $(HPX_APPS_DEPS)
parcel_send_coalesced_DEPENDENCIES = $(HPX_APPS_DEPS)
parcel_send_rendezvous_DEPENDENCIES = $(HPX_APPS_DEPS)
parcel_send_through_DEPENDENCIES = $(HPX_APPS_DEPS)
percolation_DEPENDENCIES = $(HPX_APPS_DEPS)
process_DEPENDENCIES = $(HPX_APPS_DEPS)
runtime_DEPENDENCIES = $(HPX_APPS_DEPS)
thread_cont_action_DEPENDENCIES = $(HPX_APPS_DEPS)
thread_continue_DEPENDENCIES = $(HPX_APPS_DEPS)
thread_create_DEPENDENCIES = $(HPX_APPS_DEPS)
thread_gettlsid_DEPENDENCIES = $(HPX_APPS_DEPS)
thread_sigmask_DEPENDENCIES = $(HPX_APPS_DEPS)
thread_yield_DEPENDENCIES = $(HPX_APPS_DEPS)
all: all-am

.SUFFIXES:
.SUFFIXES: .c .c$(EXEEXT) .cpp .cpp$(EXEEXT) .lo .log .o .obj .trs
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign tests/unit/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign tests/unit/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

clean-noinstPROGRAMS:
	@list='$(noinst_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list

allreduce$(EXEEXT): $(allreduce_OBJECTS) $(allreduce_DEPENDENCIES) $(EXTRA_allreduce_DEPENDENCIES) 
	@rm -f allreduce$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(allreduce_OBJECTS) $(allreduce_LDADD) $(LIBS)

apex$(EXEEXT): $(apex_OBJECTS) $(apex_DEPENDENCIES) $(EXTRA_apex_DEPENDENCIES) 
	@rm -f apex$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(apex_OBJECTS) $(apex_LDADD) $(LIBS)

bcast$(EXEEXT): $(bcast_OBJECTS) $(bcast_DEPENDENCIES) $(EXTRA_bcast_DEPENDENCIES) 
	@rm -f bcast$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(bcast_OBJECTS) $(bcast_LDADD) $(LIBS)

call_vectored$(EXEEXT): $(call_vectored_OBJECTS) $(call_vectored_DEPENDENCIES) $(EXTRA_call_vectored_DEPENDENCIES) 
	@rm -f call_vectored$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(call_vectored_OBJECTS) $(call_vectored_LDADD) $(LIBS)

call_when$(EXEEXT): $(call_when_OBJECTS) $(call_when_DEPENDENCIES) $(EXTRA_call_when_DEPENDENCIES) 
	@rm -f call_when$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(call_when_OBJECTS) $(call_when_LDADD) $(LIBS)

cxx_raii$(EXEEXT): $(cxx_raii_OBJECTS) $(cxx_raii_DEPENDENCIES) $(EXTRA_cxx_raii_DEPENDENCIES) 
	@rm -f cxx_raii$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(cxx_raii_OBJECTS) $(cxx_raii_LDADD) $(LIBS)

gas_alloc$(EXEEXT): $(gas_alloc_OBJECTS) $(gas_alloc_DEPENDENCIES) $(EXTRA_gas_alloc_DEPENDENCIES) 
	@rm -f gas_alloc$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(gas_alloc_OBJECTS) $(gas_alloc_LDADD) $(LIBS)

gas_alloc_dist$(EXEEXT): $(gas_alloc_dist_OBJECTS) $(gas_alloc_dist_DEPENDENCIES) $(EXTRA_gas_alloc_dist_DEPENDENCIES) 
	@rm -f gas_alloc_dist$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(gas_alloc_dist_OBJECTS) $(gas_alloc_dist_LDADD) $(LIBS)

gas_coll$(EXEEXT): $(gas_coll_OBJECTS) $(gas_coll_DEPENDENCIES) $(EXTRA_gas_coll_DEPENDENCIES) 
	@rm -f gas_coll$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(gas_coll_OBJECTS) $(gas_coll_LDADD) $(LIBS)

gas_global_alloc$(EXEEXT): $(gas_global_alloc_OBJECTS) $(gas_global_alloc_DEPENDENCIES) $(EXTRA_gas_global_alloc_DEPENDENCIES) 
	@rm -f gas_global_alloc$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(gas_global_alloc_OBJECTS) $(gas_global_alloc_LDADD) $(LIBS)

gas_memget$(EXEEXT): $(gas_memget_OBJECTS) $(gas_memget_DEPENDENCIES) $(EXTRA_gas_memget_DEPENDENCIES) 
	@rm -f gas_memget$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(gas_memget_OBJECTS) $(gas_memget_LDADD) $(LIBS)

gas_memput$(EXEEXT): $(gas_memput_OBJECTS) $(gas_memput_DEPENDENCIES) $(EXTRA_gas_memput_DEPENDENCIES) 
	@rm -f gas_memput$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(gas_memput_OBJECTS) $(gas_memput_LDADD) $(LIBS)

gas_move$(EXEEXT): $(gas_move_OBJECTS) $(gas_move_DEPENDENCIES) $(EXTRA_gas_move_DEPENDENCIES) 
	@rm -f gas_move$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(gas_move_OBJECTS) $(gas_move_LDADD) $(LIBS)

gas_set_affinity$(EXEEXT): $(gas_set_affinity_OBJECTS) $(gas_set_affinity_DEPENDENCIES) $(EXTRA_gas_set_affinity_DEPENDENCIES) 
	@rm -f gas_set_affinity$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(gas_set_affinity_OBJECTS) $(gas_set_affinity_LDADD) $(LIBS)

init$(EXEEXT): $(init_OBJECTS) $(init_DEPENDENCIES) $(EXTRA_init_DEPENDENCIES) 
	@rm -f init$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(init_OBJECTS) $(init_LDADD) $(LIBS)

lco_allreduce$(EXEEXT): $(lco_allreduce_OBJECTS) $(lco_allreduce_DEPENDENCIES) $(EXTRA_lco_allreduce_DEPENDENCIES) 
	@rm -f lco_allreduce$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(lco_allreduce_OBJECTS) $(lco_allreduce_LDADD) $(LIBS)

lco_and$(EXEEXT): $(lco_and_OBJECTS) $(lco_and_DEPENDENCIES) $(EXTRA_lco_and_DEPENDENCIES) 
	@rm -f lco_and$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(lco_and_OBJECTS) $(lco_and_LDADD) $(LIBS)

lco_array$(EXEEXT): $(lco_array_OBJECTS) $(lco_array_DEPENDENCIES) $(EXTRA_lco_array_DEPENDENCIES) 
	@rm -f lco_array$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(lco_array_OBJECTS) $(lco_array_LDADD) $(LIBS)

lco_collectives$(EXEEXT): $(lco_collectives_OBJECTS) $(lco_collectives_DEPENDENCIES) $(EXTRA_lco_collectives_DEPENDENCIES) 
	@rm -f lco_collectives$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(lco_collectives_OBJECTS) $(lco_collectives_LDADD) $(LIBS)

lco_futures$(EXEEXT): $(lco_futures_OBJECTS) $(lco_futures_DEPENDENCIES) $(EXTRA_lco_futures_DEPENDENCIES) 
	@rm -f lco_futures$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(lco_futures_OBJECTS) $(lco_futures_LDADD) $(LIBS)

lco_gencount$(EXEEXT): $(lco_gencount_OBJECTS) $(lco_gencount_DEPENDENCIES) $(EXTRA_lco_gencount_DEPENDENCIES) 
	@rm -f lco_gencount$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(lco_gencount_OBJECTS) $(lco_gencount_LDADD) $(LIBS)

lco_get_remote$(EXEEXT): $(lco_get_remote_OBJECTS) $(lco_get_remote_DEPENDENCIES) $(EXTRA_lco_get_remote_DEPENDENCIES) 
	@rm -f lco_get_remote$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(lco_get_remote_OBJECTS) $(lco_get_remote_LDADD) $(LIBS)

lco_reduce$(EXEEXT): $(lco_reduce_OBJECTS) $(lco_reduce_DEPENDENCIES) $(EXTRA_lco_reduce_DEPENDENCIES) 
	@rm -f lco_reduce$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(lco_reduce_OBJECTS) $(lco_reduce_LDADD) $(LIBS)

lco_sema$(EXEEXT): $(lco_sema_OBJECTS) $(lco_sema_DEPENDENCIES) $(EXTRA_lco_sema_DEPENDENCIES) 
	@rm -f lco_sema$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(lco_sema_OBJECTS) $(lco_sema_LDADD) $(LIBS)

lco_setget$(EXEEXT): $(lco_setget_OBJECTS) $(lco_setget_DEPENDENCIES) $(EXTRA_lco_setget_DEPENDENCIES) 
	@rm -f lco_setget$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(lco_setget_OBJECTS) $(lco_setget_LDADD) $(LIBS)

lco_user$(EXEEXT): $(lco_user_OBJECTS) $(lco_user_DEPENDENCIES) $(EXTRA_lco_user_DEPENDENCIES) 
	@rm -f lco_user$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(lco_user_OBJECTS) $(lco_user_LDADD) $(LIBS)

lco_wait$(EXEEXT): $(lco_wait_OBJECTS) $(lco_wait_DEPENDENCIES) $(EXTRA_lco_wait_DEPENDENCIES) 
	@rm -f lco_wait$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(lco_wait_OBJECTS) $(lco_wait_LDADD) $(LIBS)

libhpx_boot$(EXEEXT): $(libhpx_boot_OBJECTS) $(libhpx_boot_DEPENDENCIES) $(EXTRA_libhpx_boot_DEPENDENCIES) 
	@rm -f libhpx_boot$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(libhpx_boot_OBJECTS) $(libhpx_boot_LDADD) $(LIBS)

libhpx_cond$(EXEEXT): $(libhpx_cond_OBJECTS) $(libhpx_cond_DEPENDENCIES) $(EXTRA_libhpx_cond_DEPENDENCIES) 
	@rm -f libhpx_cond$(EXEEXT)
	$(AM_V_CCLD)$(libhpx_cond_LINK) $(libhpx_cond_OBJECTS) $(libhpx_cond_LDADD) $(LIBS)

parcel_continuation$(EXEEXT): $(parcel_continuation_OBJECTS) $(parcel_continuation_DEPENDENCIES) $(EXTRA_parcel_continuation_DEPENDENCIES) 
	@rm -f parcel_continuation$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(parcel_continuation_OBJECTS) $(parcel_continuation_LDADD) $(LIBS)

parcel_create$(EXEEXT): $(parcel_create_OBJECTS) $(parcel_create_DEPENDENCIES) $(EXTRA_parcel_create_DEPENDENCIES) 
	@rm -f parcel_create$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(parcel_create_OBJECTS) $(parcel_create_LDADD) $(LIBS)

parcel_send$(EXEEXT): $(parcel_send_OBJECTS) $(parcel_send_DEPENDENCIES) $(EXTRA_parcel_send_DEPENDENCIES) 
	@rm -f parcel_send$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(parcel_send_OBJECTS) $(parcel_send_LDADD) $(LIBS)

parcel_send_coalesced$(EXEEXT): $(parcel_send_coalesced_OBJECTS) $(parcel_send_coalesced_DEPENDENCIES) $(EXTRA_parcel_send_coalesced_DEPENDENCIES) 
	@rm -f parcel_send_coalesced$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(parcel_send_coalesced_OBJECTS) $(parcel_send_coalesced_LDADD) $(LIBS)

parcel_send_rendezvous$(EXEEXT): $(parcel_send_rendezvous_OBJECTS) $(parcel_send_rendezvous_DEPENDENCIES) $(EXTRA_parcel_send_rendezvous_DEPENDENCIES) 
	@rm -f parcel_send_rendezvous$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(parcel_send_rendezvous_OBJECTS) $(parcel_send_rendezvous_LDADD) $(LIBS)

parcel_send_through$(EXEEXT): $(parcel_send_through_OBJECTS) $(parcel_send_through_DEPENDENCIES) $(EXTRA_parcel_send_through_DEPENDENCIES) 
	@rm -f parcel_send_through$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(parcel_send_through_OBJECTS) $(parcel_send_through_LDADD) $(LIBS)

percolation$(EXEEXT): $(percolation_OBJECTS) $(percolation_DEPENDENCIES) $(EXTRA_percolation_DEPENDENCIES) 
	@rm -f percolation$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(percolation_OBJECTS) $(percolation_LDADD) $(LIBS)

process$(EXEEXT): $(process_OBJECTS) $(process_DEPENDENCIES) $(EXTRA_process_DEPENDENCIES) 
	@rm -f process$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(process_OBJECTS) $(process_LDADD) $(LIBS)

runtime$(EXEEXT): $(runtime_OBJECTS) $(runtime_DEPENDENCIES) $(EXTRA_runtime_DEPENDENCIES) 
	@rm -f runtime$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(runtime_OBJECTS) $(runtime_LDADD) $(LIBS)

thread_cont_action$(EXEEXT): $(thread_cont_action_OBJECTS) $(thread_cont_action_DEPENDENCIES) $(EXTRA_thread_cont_action_DEPENDENCIES) 
	@rm -f thread_cont_action$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(thread_cont_action_OBJECTS) $(thread_cont_action_LDADD) $(LIBS)

thread_continue$(EXEEXT): $(thread_continue_OBJECTS) $(thread_continue_DEPENDENCIES) $(EXTRA_thread_continue_DEPENDENCIES) 
	@rm -f thread_continue$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(thread_continue_OBJECTS) $(thread_continue_LDADD) $(LIBS)

thread_create$(EXEEXT): $(thread_create_OBJECTS) $(thread_create_DEPENDENCIES) $(EXTRA_thread_create_DEPENDENCIES) 
	@rm -f thread_create$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(thread_create_OBJECTS) $(thread_create_LDADD) $(LIBS)

thread_gettlsid$(EXEEXT): $(thread_gettlsid_OBJECTS) $(thread_gettlsid_DEPENDENCIES) $(EXTRA_thread_gettlsid_DEPENDENCIES) 
	@rm -f thread_gettlsid$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(thread_gettlsid_OBJECTS) $(thread_gettlsid_LDADD) $(LIBS)

thread_sigmask$(EXEEXT): $(thread_sigmask_OBJECTS) $(thread_sigmask_DEPENDENCIES) $(EXTRA_thread_sigmask_DEPENDENCIES) 
	@rm -f thread_sigmask$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(thread_sigmask_OBJECTS) $(thread_sigmask_LDADD) $(LIBS)

thread_yield$(EXEEXT): $(thread_yield_OBJECTS) $(thread_yield_DEPENDENCIES) $(EXTRA_thread_yield_DEPENDENCIES) 
	@rm -f thread_yield$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(thread_yield_OBJECTS) $(thread_yield_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/allreduce.Po
include ./$(DEPDIR)/apex.Po
include ./$(DEPDIR)/bcast.Po
include ./$(DEPDIR)/call_vectored.Po
include ./$(DEPDIR)/call_when.Po
include ./$(DEPDIR)/cxx_raii.Po
include ./$(DEPDIR)/gas_alloc.Po
include ./$(DEPDIR)/gas_alloc_dist.Po
include ./$(DEPDIR)/gas_coll.Po
include ./$(DEPDIR)/gas_global_alloc.Po
include ./$(DEPDIR)/gas_memget.Po
include ./$(DEPDIR)/gas_memput.Po
include ./$(DEPDIR)/gas_move.Po
include ./$(DEPDIR)/gas_set_affinity.Po
include ./$(DEPDIR)/init.Po
include ./$(DEPDIR)/lco_allreduce.Po
include ./$(DEPDIR)/lco_and.Po
include ./$(DEPDIR)/lco_array.Po
include ./$(DEPDIR)/lco_collectives.Po
include ./$(DEPDIR)/lco_futures.Po
include ./$(DEPDIR)/lco_gencount.Po
include ./$(DEPDIR)/lco_get_remote.Po
include ./$(DEPDIR)/lco_reduce.Po
include ./$(DEPDIR)/lco_sema.Po
include ./$(DEPDIR)/lco_setget.Po
include ./$(DEPDIR)/lco_user.Po
include ./$(DEPDIR)/lco_wait.Po
include ./$(DEPDIR)/libhpx_boot-libhpx_boot.Po
include ./$(DEPDIR)/libhpx_cond-libhpx_cond.Po
include ./$(DEPDIR)/parcel_continuation.Po
include ./$(DEPDIR)/parcel_create.Po
include ./$(DEPDIR)/parcel_send.Po
include ./$(DEPDIR)/parcel_send_coalesced.Po
include ./$(DEPDIR)/parcel_send_rendezvous.Po
include ./$(DEPDIR)/parcel_send_through.Po
include ./$(DEPDIR)/percolation.Po
include ./$(DEPDIR)/process.Po
include ./$(DEPDIR)/runtime.Po
include ./$(DEPDIR)/thread_cont_action.Po
include ./$(DEPDIR)/thread_continue.Po
include ./$(DEPDIR)/thread_create.Po
include ./$(DEPDIR)/thread_gettlsid.Po
include ./$(DEPDIR)/thread_sigmask.Po
include ./$(DEPDIR)/thread_yield.Po

.c.o:
	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c -o $@ $<

.c.obj:
	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.c.lo:
	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
	$(LTCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Plo
#	$(AM_V_CC)source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LTCOMPILE) -c -o $@ $<

libhpx_cond-libhpx_cond.o: libhpx_cond.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhpx_cond_CPPFLAGS) $(CPPFLAGS) $(libhpx_cond_CFLAGS) $(CFLAGS) -MT libhpx_cond-libhpx_cond.o -MD -MP -MF $(DEPDIR)/libhpx_cond-libhpx_cond.Tpo -c -o libhpx_cond-libhpx_cond.o `test -f 'libhpx_cond.c' || echo '$(srcdir)/'`libhpx_cond.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libhpx_cond-libhpx_cond.Tpo $(DEPDIR)/libhpx_cond-libhpx_cond.Po
#	$(AM_V_CC)source='libhpx_cond.c' object='libhpx_cond-libhpx_cond.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhpx_cond_CPPFLAGS) $(CPPFLAGS) $(libhpx_cond_CFLAGS) $(CFLAGS) -c -o libhpx_cond-libhpx_cond.o `test -f 'libhpx_cond.c' || echo '$(srcdir)/'`libhpx_cond.c

libhpx_cond-libhpx_cond.obj: libhpx_cond.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhpx_cond_CPPFLAGS) $(CPPFLAGS) $(libhpx_cond_CFLAGS) $(CFLAGS) -MT libhpx_cond-libhpx_cond.obj -MD -MP -MF $(DEPDIR)/libhpx_cond-libhpx_cond.Tpo -c -o libhpx_cond-libhpx_cond.obj `if test -f 'libhpx_cond.c'; then $(CYGPATH_W) 'libhpx_cond.c'; else $(CYGPATH_W) '$(srcdir)/libhpx_cond.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libhpx_cond-libhpx_cond.Tpo $(DEPDIR)/libhpx_cond-libhpx_cond.Po
#	$(AM_V_CC)source='libhpx_cond.c' object='libhpx_cond-libhpx_cond.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhpx_cond_CPPFLAGS) $(CPPFLAGS) $(libhpx_cond_CFLAGS) $(CFLAGS) -c -o libhpx_cond-libhpx_cond.obj `if test -f 'libhpx_cond.c'; then $(CYGPATH_W) 'libhpx_cond.c'; else $(CYGPATH_W) '$(srcdir)/libhpx_cond.c'; fi`

.cpp.o:
	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Plo
#	$(AM_V_CXX)source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LTCXXCOMPILE) -c -o $@ $<

libhpx_boot-libhpx_boot.o: libhpx_boot.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhpx_boot_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libhpx_boot-libhpx_boot.o -MD -MP -MF $(DEPDIR)/libhpx_boot-libhpx_boot.Tpo -c -o libhpx_boot-libhpx_boot.o `test -f 'libhpx_boot.cpp' || echo '$(srcdir)/'`libhpx_boot.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libhpx_boot-libhpx_boot.Tpo $(DEPDIR)/libhpx_boot-libhpx_boot.Po
#	$(AM_V_CXX)source='libhpx_boot.cpp' object='libhpx_boot-libhpx_boot.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhpx_boot_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libhpx_boot-libhpx_boot.o `test -f 'libhpx_boot.cpp' || echo '$(srcdir)/'`libhpx_boot.cpp

libhpx_boot-libhpx_boot.obj: libhpx_boot.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhpx_boot_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libhpx_boot-libhpx_boot.obj -MD -MP -MF $(DEPDIR)/libhpx_boot-libhpx_boot.Tpo -c -o libhpx_boot-libhpx_boot.obj `if test -f 'libhpx_boot.cpp'; then $(CYGPATH_W) 'libhpx_boot.cpp'; else $(CYGPATH_W) '$(srcdir)/libhpx_boot.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libhpx_boot-libhpx_boot.Tpo $(DEPDIR)/libhpx_boot-libhpx_boot.Po
#	$(AM_V_CXX)source='libhpx_boot.cpp' object='libhpx_boot-libhpx_boot.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libhpx_boot_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libhpx_boot-libhpx_boot.obj `if test -f 'libhpx_boot.cpp'; then $(CYGPATH_W) 'libhpx_boot.cpp'; else $(CYGPATH_W) '$(srcdir)/libhpx_boot.cpp'; fi`

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

# Recover from deleted '.trs' file; this should ensure that
# "rm -f foo.log; make foo.trs" re-run 'foo.test', and re-create
# both 'foo.log' and 'foo.trs'.  Break the recipe in two subshells
# to avoid problems with "make -n".
.log.trs:
	rm -f $< $@
	$(MAKE) $(AM_MAKEFLAGS) $<

# Leading 'am--fnord' is there to ensure the list of targets does not
# expand to empty, as could happen e.g. with make check TESTS=''.
am--fnord $(TEST_LOGS) $(TEST_LOGS:.log=.trs): $(am__force_recheck)
am--force-recheck:
	@:

$(TEST_SUITE_LOG): $(TEST_LOGS)
	@$(am__set_TESTS_bases); \
	am__f_ok () { test -f "$$1" && test -r "$$1"; }; \
	redo_bases=`for i in $$bases; do \
	              am__f_ok $$i.trs && am__f_ok $$i.log || echo $$i; \
	            done`; \
	if test -n "$$redo_bases"; then \
	  redo_logs=`for i in $$redo_bases; do echo $$i.log; done`; \
	  redo_results=`for i in $$redo_bases; do echo $$i.trs; done`; \
	  if $(am__make_dryrun); then :; else \
	    rm -f $$redo_logs && rm -f $$redo_results || exit 1; \
	  fi; \
	fi; \
	if test -n "$$am__remaking_logs"; then \
	  echo "fatal: making $(TEST_SUITE_LOG): possible infinite" \
	       "recursion detected" >&2; \
	elif test -n "$$redo_logs"; then \
	  am__remaking_logs=yes $(MAKE) $(AM_MAKEFLAGS) $$redo_logs; \
	fi; \
	if $(am__make_dryrun); then :; else \
	  st=0;  \
	  errmsg="fatal: making $(TEST_SUITE_LOG): failed to create"; \
	  for i in $$redo_bases; do \
	    test -f $$i.trs && test -r $$i.trs \
	      || { echo "$$errmsg $$i.trs" >&2; st=1; }; \
	    test -f $$i.log && test -r $$i.log \
	      || { echo "$$errmsg $$i.log" >&2; st=1; }; \
	  done; \
	  test $$st -eq 0 || exit 1; \
	fi
	@$(am__sh_e_setup); $(am__tty_colors); $(am__set_TESTS_bases); \
	ws='[ 	]'; \
	results=`for b in $$bases; do echo $$b.trs; done`; \
	test -n "$$results" || results=/dev/null; \
	all=`  grep "^$$ws*:test-result:"           $$results | wc -l`; \
	pass=` grep "^$$ws*:test-result:$$ws*PASS"  $$results | wc -l`; \
	fail=` grep "^$$ws*:test-result:$$ws*FAIL"  $$results | wc -l`; \
	skip=` grep "^$$ws*:test-result:$$ws*SKIP"  $$results | wc -l`; \
	xfail=`grep "^$$ws*:test-result:$$ws*XFAIL" $$results | wc -l`; \
	xpass=`grep "^$$ws*:test-result:$$ws*XPASS" $$results | wc -l`; \
	error=`grep "^$$ws*:test-result:$$ws*ERROR" $$results | wc -l`; \
	if test `expr $$fail + $$xpass + $$error` -eq 0; then \
	  success=true; \
	else \
	  success=false; \
	fi; \
	br='==================='; br=$$br$$br$$br$$br; \
	result_count () \
	{ \
	    if test x"$$1" = x"--maybe-color"; then \
	      maybe_colorize=yes; \
	    elif test x"$$1" = x"--no-color"; then \
	      maybe_colorize=no; \
	    else \
	      echo "$@: invalid 'result_count' usage" >&2; exit 4; \
	    fi; \
	    shift; \
	    desc=$$1 count=$$2; \
	    if test $$maybe_colorize = yes && test $$count -gt 0; then \
	      color_start=$$3 color_end=$$std; \
	    else \
	      color_start= color_end=; \
	    fi; \
	    echo "$${color_start}# $$desc $$count$${color_end}"; \
	}; \
	create_testsuite_report () \
	{ \
	  result_count $$1 "TOTAL:" $$all   "$$brg"; \
	  result_count $$1 "PASS: " $$pass  "$$grn"; \
	  result_count $$1 "SKIP: " $$skip  "$$blu"; \
	  result_count $$1 "XFAIL:" $$xfail "$$lgn"; \
	  result_count $$1 "FAIL: " $$fail  "$$red"; \
	  result_count $$1 "XPASS:" $$xpass "$$red"; \
	  result_count $$1 "ERROR:" $$error "$$mgn"; \
	}; \
	{								\
	  echo "$(PACKAGE_STRING): $(subdir)/$(TEST_SUITE_LOG)" |	\
	    $(am__rst_title);						\
	  create_testsuite_report --no-color;				\
	  echo;								\
	  echo ".. contents:: :depth: 2";				\
	  echo;								\
	  for b in $$bases; do echo $$b; done				\
	    | $(am__create_global_log);					\
	} >$(TEST_SUITE_LOG).tmp || exit 1;				\
	mv $(TEST_SUITE_LOG).tmp $(TEST_SUITE_LOG);			\
	if $$success; then						\
	  col="$$grn";							\
	 else								\
	  col="$$red";							\
	  test x"$$VERBOSE" = x || cat $(TEST_SUITE_LOG);		\
	fi;								\
	echo "$${col}$$br$${std}"; 					\
	echo "$${col}Testsuite summary for $(PACKAGE_STRING)$${std}";	\
	echo "$${col}$$br$${std}"; 					\
	create_testsuite_report --maybe-color;				\
	echo "$$col$$br$$std";						\
	if $$success; then :; else					\
	  echo "$${col}See $(subdir)/$(TEST_SUITE_LOG)$${std}";		\
	  if test -n "$(PACKAGE_BUGREPORT)"; then			\
	    echo "$${col}Please report to $(PACKAGE_BUGREPORT)$${std}";	\
	  fi;								\
	  echo "$$col$$br$$std";					\
	fi;								\
	$$success || exit 1

check-TESTS:
	@list='$(RECHECK_LOGS)';           test -z "$$list" || rm -f $$list
	@list='$(RECHECK_LOGS:.log=.trs)'; test -z "$$list" || rm -f $$list
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	trs_list=`for i in $$bases; do echo $$i.trs; done`; \
	log_list=`echo $$log_list`; trs_list=`echo $$trs_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) TEST_LOGS="$$log_list"; \
	exit $$?;
recheck: all 
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	bases=`for i in $$bases; do echo $$i; done \
	         | $(am__list_recheck_tests)` || exit 1; \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	log_list=`echo $$log_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) \
	        am__force_recheck=am--force-recheck \
	        TEST_LOGS="$$log_list"; \
	exit $$?
allreduce.log: allreduce$(EXEEXT)
	@p='allreduce$(EXEEXT)'; \
	b='allreduce'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
bcast.log: bcast$(EXEEXT)
	@p='bcast$(EXEEXT)'; \
	b='bcast'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
call_when.log: call_when$(EXEEXT)
	@p='call_when$(EXEEXT)'; \
	b='call_when'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
call_vectored.log: call_vectored$(EXEEXT)
	@p='call_vectored$(EXEEXT)'; \
	b='call_vectored'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
cxx_raii.log: cxx_raii$(EXEEXT)
	@p='cxx_raii$(EXEEXT)'; \
	b='cxx_raii'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
gas_alloc.log: gas_alloc$(EXEEXT)
	@p='gas_alloc$(EXEEXT)'; \
	b='gas_alloc'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
gas_alloc_dist.log: gas_alloc_dist$(EXEEXT)
	@p='gas_alloc_dist$(EXEEXT)'; \
	b='gas_alloc_dist'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
gas_coll.log: gas_coll$(EXEEXT)
	@p='gas_coll$(EXEEXT)'; \
	b='gas_coll'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
gas_global_alloc.log: gas_global_alloc$(EXEEXT)
	@p='gas_global_alloc$(EXEEXT)'; \
	b='gas_global_alloc'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
gas_memget.log: gas_memget$(EXEEXT)
	@p='gas_memget$(EXEEXT)'; \
	b='gas_memget'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
gas_memput.log: gas_memput$(EXEEXT)
	@p='gas_memput$(EXEEXT)'; \
	b='gas_memput'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
gas_move.log: gas_move$(EXEEXT)
	@p='gas_move$(EXEEXT)'; \
	b='gas_move'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
gas_set_affinity.log: gas_set_affinity$(EXEEXT)
	@p='gas_set_affinity$(EXEEXT)'; \
	b='gas_set_affinity'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
init.log: init$(EXEEXT)
	@p='init$(EXEEXT)'; \
	b='init'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
lco_get_remote.log: lco_get_remote$(EXEEXT)
	@p='lco_get_remote$(EXEEXT)'; \
	b='lco_get_remote'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
lco_allreduce.log: lco_allreduce$(EXEEXT)
	@p='lco_allreduce$(EXEEXT)'; \
	b='lco_allreduce'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
lco_and.log: lco_and$(EXEEXT)
	@p='lco_and$(EXEEXT)'; \
	b='lco_and'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
lco_array.log: lco_array$(EXEEXT)
	@p='lco_array$(EXEEXT)'; \
	b='lco_array'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
lco_collectives.log: lco_collectives$(EXEEXT)
	@p='lco_collectives$(EXEEXT)'; \
	b='lco_collectives'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
lco_futures.log: lco_futures$(EXEEXT)
	@p='lco_futures$(EXEEXT)'; \
	b='lco_futures'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
lco_gencount.log: lco_gencount$(EXEEXT)
	@p='lco_gencount$(EXEEXT)'; \
	b='lco_gencount'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
lco_reduce.log: lco_reduce$(EXEEXT)
	@p='lco_reduce$(EXEEXT)'; \
	b='lco_reduce'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
lco_sema.log: lco_sema$(EXEEXT)
	@p='lco_sema$(EXEEXT)'; \
	b='lco_sema'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
lco_setget.log: lco_setget$(EXEEXT)
	@p='lco_setget$(EXEEXT)'; \
	b='lco_setget'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
lco_user.log: lco_user$(EXEEXT)
	@p='lco_user$(EXEEXT)'; \
	b='lco_user'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
libhpx_boot.log: libhpx_boot$(EXEEXT)
	@p='libhpx_boot$(EXEEXT)'; \
	b='libhpx_boot'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
libhpx_cond.log: libhpx_cond$(EXEEXT)
	@p='libhpx_cond$(EXEEXT)'; \
	b='libhpx_cond'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
parcel_continuation.log: parcel_continuation$(EXEEXT)
	@p='parcel_continuation$(EXEEXT)'; \
	b='parcel_continuation'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
parcel_create.log: parcel_create$(EXEEXT)
	@p='parcel_create$(EXEEXT)'; \
	b='parcel_create'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
parcel_send.log: parcel_send$(EXEEXT)
	@p='parcel_send$(EXEEXT)'; \
	b='parcel_send'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
parcel_send_coalesced.log: parcel_send_coalesced$(EXEEXT)
	@p='parcel_send_coalesced$(EXEEXT)'; \
	b='parcel_send_coalesced'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
parcel_send_rendezvous.log: parcel_send_rendezvous$(EXEEXT)
	@p='parcel_send_rendezvous$(EXEEXT)'; \
	b='parcel_send_rendezvous'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
parcel_send_through.log: parcel_send_through$(EXEEXT)
	@p='parcel_send_through$(EXEEXT)'; \
	b='parcel_send_through'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
process.log: process$(EXEEXT)
	@p='process$(EXEEXT)'; \
	b='process'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
runtime.log: runtime$(EXEEXT)
	@p='runtime$(EXEEXT)'; \
	b='runtime'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
thread_cont_action.log: thread_cont_action$(EXEEXT)
	@p='thread_cont_action$(EXEEXT)'; \
	b='thread_cont_action'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
thread_continue.log: thread_continue$(EXEEXT)
	@p='thread_continue$(EXEEXT)'; \
	b='thread_continue'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
thread_create.log: thread_create$(EXEEXT)
	@p='thread_create$(EXEEXT)'; \
	b='thread_create'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
thread_gettlsid.log: thread_gettlsid$(EXEEXT)
	@p='thread_gettlsid$(EXEEXT)'; \
	b='thread_gettlsid'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
thread_sigmask.log: thread_sigmask$(EXEEXT)
	@p='thread_sigmask$(EXEEXT)'; \
	b='thread_sigmask'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
thread_yield.log: thread_yield$(EXEEXT)
	@p='thread_yield$(EXEEXT)'; \
	b='thread_yield'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
lco_wait.log: lco_wait$(EXEEXT)
	@p='lco_wait$(EXEEXT)'; \
	b='lco_wait'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
apex.log: apex$(EXEEXT)
	@p='apex$(EXEEXT)'; \
	b='apex'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
percolation.log: percolation$(EXEEXT)
	@p='percolation$(EXEEXT)'; \
	b='percolation'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
.cpp.log:
	@p='$<'; \
	$(am__set_b); \
	$(am__check_pre) $(CPP_LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_CPP_LOG_DRIVER_FLAGS) $(CPP_LOG_DRIVER_FLAGS) -- $(CPP_LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
#.cpp$(EXEEXT).log:
#	@p='$<'; \
#	$(am__set_b); \
#	$(am__check_pre) $(CPP_LOG_DRIVER) --test-name "$$f" \
#	--log-file $$b.log --trs-file $$b.trs \
#	$(am__common_driver_flags) $(AM_CPP_LOG_DRIVER_FLAGS) $(CPP_LOG_DRIVER_FLAGS) -- $(CPP_LOG_COMPILE) \
#	"$$tst" $(AM_TESTS_FD_REDIRECT)
.c.log:
	@p='$<'; \
	$(am__set_b); \
	$(am__check_pre) $(C_LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_C_LOG_DRIVER_FLAGS) $(C_LOG_DRIVER_FLAGS) -- $(C_LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
#.c$(EXEEXT).log:
#	@p='$<'; \
#	$(am__set_b); \
#	$(am__check_pre) $(C_LOG_DRIVER) --test-name "$$f" \
#	--log-file $$b.log --trs-file $$b.trs \
#	$(am__common_driver_flags) $(AM_C_LOG_DRIVER_FLAGS) $(C_LOG_DRIVER_FLAGS) -- $(C_LOG_COMPILE) \
#	"$$tst" $(AM_TESTS_FD_REDIRECT)

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: check-am
all-am: Makefile $(PROGRAMS) $(HEADERS)
installdirs:
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:
	-test -z "$(TEST_LOGS)" || rm -f $(TEST_LOGS)
	-test -z "$(TEST_LOGS:.log=.trs)" || rm -f $(TEST_LOGS:.log=.trs)
	-test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-libtool clean-noinstPROGRAMS \
	mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am:

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am:

.MAKE: check-am install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am check check-TESTS check-am clean \
	clean-generic clean-libtool clean-noinstPROGRAMS cscopelist-am \
	ctags ctags-am distclean distclean-compile distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am install-info \
	install-info-am install-man install-pdf install-pdf-am \
	install-ps install-ps-am install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	recheck tags tags-am uninstall uninstall-am

.PRECIOUS: Makefile


# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
