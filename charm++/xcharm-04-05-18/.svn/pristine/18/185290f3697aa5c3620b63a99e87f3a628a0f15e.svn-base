mainmodule charm_randomAccess {

  // log_2 of the local table size
  readonly int                             N;
  // The local table size
  readonly CmiInt8                         localTableSize;
  // Handle to the test driver (chare)
  readonly CProxy_TestDriver               driverProxy;
  // Handle to the communication library (group)
  //readonly CProxy_ArrayMeshStreamer<dtype, int, Updater,
  //                                  SimpleMeshRouter> aggregator;
  // Number of chares per PE
  readonly long long            numElementsPerPe;

  mainchare TestDriver {
    entry TestDriver (CkArgMsg *args);
    entry [reductiontarget] void start();
    entry void startVerificationPhase();
    entry [reductiontarget] void reportErrors(CmiInt8 globalNumErrors);
    entry void checkErrors();
  };

  array [1D] Updater {
    entry Updater();
    // This method generates keys that index into the global table.
    // Each generated key is submitted to the communication library
    entry [threaded] void generateUpdates();
    // Used for verification
    entry void checkErrors();

		entry void update (const dtype &key); 
  };

  // Setup required for the communication library
  //message MeshStreamerMessage<ArrayDataItem<dtype, int> >;
  //group ArrayMeshStreamer<dtype, int, Updater, SimpleMeshRouter>;
  //group MeshStreamer<ArrayDataItem<dtype, int>, SimpleMeshRouter>;

};
